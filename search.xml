<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DOM部分方法精解</title>
      <link href="/2022/06/16/DOM%E9%83%A8%E5%88%86%E6%96%B9%E6%B3%95%E7%B2%BE%E8%A7%A3/"/>
      <url>/2022/06/16/DOM%E9%83%A8%E5%88%86%E6%96%B9%E6%B3%95%E7%B2%BE%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="appendChild"><a href="#appendChild" class="headerlink" title="appendChild()"></a>appendChild()</h3><p>appendChild() 方法可向节点的子节点列表的末尾添加新的子节点.</p><p>提示：如果文档树中已经存在了newchild,它将从文档树中删除,然后重新插入它的新位置.如果newchild是DocumentFragment节点,则不会直接插入它,而是把它的子节点按序插入当前节点的 childNodes[] 数组的末尾.</p><p>通常情况下使用appendChild()方法转移某个列表项到另一个列表项.</p><h3 id="children"><a href="#children" class="headerlink" title="children"></a>children</h3><p>var children = node.children</p><p>返回一个HTMLCollection而非数组;HTMLCollection是DOM的子元素的一个活的有序集合node;可以通过Array.from()方法转换为数组;可以通过使用集合上的item()方法或使用JavaScript数组样式表示法来访问集合中的单个子节点.</p><p>如果该节点没有子元素,则children是一个空的列表length为0.</p>]]></content>
      
      
      
        <tags>
            
            <tag> JS DOM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阻止浏览器默认行为</title>
      <link href="/2022/06/16/%E9%98%BB%E6%AD%A2%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA/"/>
      <url>/2022/06/16/%E9%98%BB%E6%AD%A2%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="js阻止浏览器默认行为"><a href="#js阻止浏览器默认行为" class="headerlink" title="js阻止浏览器默认行为"></a>js阻止浏览器默认行为</h3><p>三种阻止事件执行的方式<br>1.event.preventDefault()<br>2.event.stopPropagation()<br>3.return false<br>event.preventDefault() 阻止特定事件的默认行为（只有 cancelable 设置为 true 的事件才可以使用），比如：点击 type=”submit” 的 input 标签提交表单，你在 onclick 事件处理中调用<br>event.preventDefault()方法， 那么在点击 submit 后就不会自动提交表单了。但是并不阻止事件冒泡。event.stopPropagation() 立即停止事件在 DOM 层次中的传播，即阻止事件冒泡。但是，并不阻止默认行为。<br>return false 之后的所有相关的触发事件和动作都不会被执行。阻止事件继续传播，事件冒泡和默认行为都被阻止。</p>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>事件委托</title>
      <link href="/2022/06/16/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/"/>
      <url>/2022/06/16/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/</url>
      
        <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>一般来讲,会把一个或者一组元素的事件委托到它的父层或者更外层元素上,真正绑定事件的是外层元素,当事件响应到需要绑定的元素上时,会通过事件冒泡机制从而触发它的外层元素的绑定事件上,然后在外层元素上去执行函数.</p><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>有三个同事要收快递,为了签收快递,有两种办法：一是三个人在公司门口等快递；二是委托收快递事件给前台代为签收.前台收到快递后,他会判断收件人是谁,然后按照收件人的要求签收,甚至代为付款.第二种方案还有一个优势,那就是即使公司里来了新员工,前台也会在收到其快递后核实并代为签收.</p><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><p>所有的人都在公司门口等待签收,门口站不下,页面所有元素使用一个事件,页面受不了,既然是同一个事情,为了方便,就把这个事情委托给一个最合适的人去干,公司通畅,页面舒服.</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;<span class="built_in">head</span> lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        li &#123;</span><br><span class="line">            height: 30px;</span><br><span class="line">            line-height: 30px;</span><br><span class="line">            margin: 3px 0;</span><br><span class="line">            background-color: red;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;button&gt;创建4个移民li&lt;/button&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;我是土著li&lt;/li&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;#&quot;</span>&gt;我是土著li&lt;/a&gt;</span><br><span class="line">    &lt;li&gt;我是土著li&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;我是土著li&lt;/li&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;#&quot;</span>&gt;我是土著li&lt;/a&gt;</span><br><span class="line">    &lt;li&gt;我是土著li&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var liArr = document.getElementsByTagName(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">    var ul = document.getElementsByTagName(<span class="string">&quot;ul&quot;</span>)[0];</span><br><span class="line">    var btn = document.getElementsByTagName(<span class="string">&quot;button&quot;</span>)[0];</span><br><span class="line">//    <span class="keyword">for</span>(var i=0;i&lt;liArr.length;i++)&#123;</span><br><span class="line">//        liArr[i].onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">//            alert(<span class="string">&quot;我是土著li&quot;</span>);</span><br><span class="line">//        &#125;</span><br><span class="line">//    &#125;</span><br><span class="line">    btn.onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="keyword">for</span>(var i=1;i&lt;=4;i++)&#123;</span><br><span class="line">            var newLi = document.createElement(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">            var newA = document.createElement(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">            newLi.innerHTML = <span class="string">&quot;我是移民li&quot;</span>;</span><br><span class="line">            newA.innerHTML = <span class="string">&quot;我是移民a&quot;</span>;</span><br><span class="line">            newA.href = <span class="string">&quot;#&quot;</span>;</span><br><span class="line">            ul.appendChild(newLi);</span><br><span class="line">            ul.appendChild(newA);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //普通的事件绑定,没有办法为新创建的元素绑定事件.所以我们要使用冒泡的特性,事件委托！</span><br><span class="line">    //事件委托</span><br><span class="line">    ul.onclick = <span class="keyword">function</span> (event) &#123;</span><br><span class="line">        //获取事件触动的时候传递过来的值</span><br><span class="line">        event = event || window.event;</span><br><span class="line">        var aaa = event.target?event.target:event.srcElement;</span><br><span class="line">        //判断标签名,如果是li标签弹窗</span><br><span class="line">        <span class="keyword">if</span>(aaa.tagName === <span class="string">&quot;LI&quot;</span>)&#123;</span><br><span class="line">            alert(<span class="string">&quot;我是li&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>事件委托是利用冒泡的特性实现的,适合使用的事件有：click,mousedown,mouseup,keydown,keyup,keypress.</p>]]></content>
      
      
      
        <tags>
            
            <tag> DOM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清除浮动</title>
      <link href="/2022/06/16/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/"/>
      <url>/2022/06/16/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="浮动问题的产生"><a href="#浮动问题的产生" class="headerlink" title="浮动问题的产生:"></a>浮动问题的产生:</h2><pre><code>父盒子没有设置height,子盒子在父盒子中进行了float,那么由于父盒子的高度为0,下面的元素会自动补位,解决由于补位产生的问题叫浮动清除.</code></pre><h2 id="清除浮动的方式"><a href="#清除浮动的方式" class="headerlink" title="清除浮动的方式:"></a>清除浮动的方式:</h2><h3 id="方式一-使用overflow属性来清除浮动"><a href="#方式一-使用overflow属性来清除浮动" class="headerlink" title="方式一:使用overflow属性来清除浮动"></a>方式一:使用overflow属性来清除浮动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.clearfix&#123;</span><br><span class="line">overflow:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先找到浮动盒子的父元素,再在父元素中添加一个属性:overflow:hidden,就是清除这个父元素中的子元素浮动对页面的负面影响.</p><p>PS:一般情况下也不会使用这种方式,因为overflow:hidden有可能造成新的问题,将不该隐藏的地方隐藏.</p><h3 id="方式二-使用额外标签法"><a href="#方式二-使用额外标签法" class="headerlink" title="方式二:使用额外标签法"></a>方式二:使用额外标签法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.clearfix&#123;</span><br><span class="line">　　 clear:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在浮动的盒子之下再放一个标签,在这个标签中使用clear:both,来清除浮动对页面的影响.</p><p>内部标签:会将这个浮动盒子的父盒子高度重新撑开.</p><p>外部标签:会将这个浮动盒子的影响清除,但是不会撑开父盒子.</p><p>PS:一般情况下不使用,因为这种清除浮动的方式会增加页面的标签,造成结构的混乱.</p><h3 id="方法三-使用伪类元素来清除浮动"><a href="#方法三-使用伪类元素来清除浮动" class="headerlink" title="方法三:使用伪类元素来清除浮动"></a>方法三:使用伪类元素来清除浮动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:after&#123;</span><br><span class="line">content: <span class="string">&quot;&quot;</span>;</span><br><span class="line">display: block;</span><br><span class="line">height: 0;</span><br><span class="line">line-height: 0;</span><br><span class="line">visibility: hidden;</span><br><span class="line">clear: both;</span><br><span class="line">&#125;</span><br><span class="line">.clearfix&#123;</span><br><span class="line">zoom:1;//兼容IE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法四-使用双伪元素清除浮动"><a href="#方法四-使用双伪元素清除浮动" class="headerlink" title="方法四:使用双伪元素清除浮动"></a>方法四:使用双伪元素清除浮动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:before,.clearfix:after &#123;</span><br><span class="line">    content: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    display: block;</span><br><span class="line">    clear: both;</span><br><span class="line">&#125;</span><br><span class="line">.clearfix &#123;</span><br><span class="line">    zoom: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总的来说第一种方法会将超出部分隐藏在某些时候我们想清除浮动并且保留超出部分时做不到,第二种方法会增加许多不必要的标签,第四种不够严谨,所以我们尽量使用第三种方法来清除浮动.</p>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定位</title>
      <link href="/2022/06/16/%E5%AE%9A%E4%BD%8D/"/>
      <url>/2022/06/16/%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p>Position: left | right | top | bottom</p><h3 id="静态定位"><a href="#静态定位" class="headerlink" title="静态定位"></a>静态定位</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">position:static;</span><br></pre></td></tr></table></figure><p>标准流.</p><h3 id="绝对定位-看脸型"><a href="#绝对定位-看脸型" class="headerlink" title="绝对定位(看脸型)"></a>绝对定位(看脸型)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">position:absolute;    </span><br></pre></td></tr></table></figure><p>特点:</p><ol><li>自身从浏览器出发.</li><li>绝对定位之后,元素不占位置,会脱标.</li><li>嵌套的盒子,父元素没有给自身绝对定位,子元素绝对定位,子元素从浏览器出发设置自身位置.</li><li>嵌套的盒子,父元素绝对定位,子元素绝对定位,子元素从父元素出发设置自身位置.</li><li>行内元素转成行内块.（不推荐使用）<h3 id="相对定位（自恋型）"><a href="#相对定位（自恋型）" class="headerlink" title="相对定位（自恋型）"></a>相对定位（自恋型）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">position:relative; </span><br></pre></td></tr></table></figure>特点:</li><li>位置从自身出发.</li><li>设置相对定位之后,还占据原来的位置.</li><li>子绝父相,子元素绝对定位,父元素相对定位.</li><li>嵌套的盒子,父元素相对定位,子元素绝对定位,子元素从父元素出发设置自身位置.</li><li>不能将行内元素转成行内块.<h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">position:fixed;   </span><br></pre></td></tr></table></figure>特点:</li><li>位置从浏览器出发.</li><li>不占据原来的位置,会脱标</li><li>可以将行内元素转换为行内块.（不推荐使用）</li></ol><h4 id="实际开发中应该尽量使用标准流-标准流解决不了的使用浮动-浮动解决不了的使用定位"><a href="#实际开发中应该尽量使用标准流-标准流解决不了的使用浮动-浮动解决不了的使用定位" class="headerlink" title="实际开发中应该尽量使用标准流,标准流解决不了的使用浮动,浮动解决不了的使用定位."></a>实际开发中应该尽量使用标准流,标准流解决不了的使用浮动,浮动解决不了的使用定位.</h4>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量提升</title>
      <link href="/2022/06/16/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/"/>
      <url>/2022/06/16/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</url>
      
        <content type="html"><![CDATA[<h3 id="Js预解析"><a href="#Js预解析" class="headerlink" title="Js预解析"></a>Js预解析</h3><h4 id="查看语法错误"><a href="#查看语法错误" class="headerlink" title="查看语法错误"></a>查看语法错误</h4><h4 id="变量声明提升和函数整体提升-变量声明提升的时候只提升变量名-不提升变量值"><a href="#变量声明提升和函数整体提升-变量声明提升的时候只提升变量名-不提升变量值" class="headerlink" title="变量声明提升和函数整体提升(变量声明提升的时候只提升变量名,不提升变量值)."></a>变量声明提升和函数整体提升(变量声明提升的时候只提升变量名,不提升变量值).</h4><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var num = 10;</span><br><span class="line">fun();</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">fun</span></span>()&#123;</span><br><span class="line">    console.log(num);</span><br><span class="line">    var num = 20;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印undefined;虽然内部可以访问到外部的num,但是内部可以找到已经提升的变量名num,所以用内部的,所以打印undefined.</p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example;"></a>Example;</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">f2();</span><br><span class="line">   console.log(cc);</span><br><span class="line">   console.log(bb);</span><br><span class="line">   console.log(aa);</span><br><span class="line">   <span class="keyword">function</span> <span class="function"><span class="title">f2</span></span>()&#123;</span><br><span class="line">       var aa = bb = cc = 9;</span><br><span class="line">       console.log(aa);</span><br><span class="line">       console.log(bb);</span><br><span class="line">       console.log(cc);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>最后打印出9,9,9,9,9 报错,因为bb和cc是全局变量而aa是内部的变量.</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack4脚手架的搭建</title>
      <link href="/2022/06/16/webpack4%E8%84%9A%E6%89%8B%E6%9E%B6%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/06/16/webpack4%E8%84%9A%E6%89%8B%E6%9E%B6%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="抽取js的公用部分common"><a href="#抽取js的公用部分common" class="headerlink" title="抽取js的公用部分common"></a>抽取js的公用部分common</h3><p>CommonsChunkPlugin被SplitChunksPlugin代替用法改变,性能提升。</p><h3 id="将css单独打包"><a href="#将css单独打包" class="headerlink" title="将css单独打包"></a>将css单独打包</h3><p>ExtractTextWebpackPlugin@next或者MiniCssExtractPLugin。</p><h3 id="抽取通用html文件"><a href="#抽取通用html文件" class="headerlink" title="抽取通用html文件"></a>抽取通用html文件</h3><p>HtmlWebpackPlugin。</p><h3 id="ejs模板文件"><a href="#ejs模板文件" class="headerlink" title="ejs模板文件"></a>ejs模板文件</h3><p>HtmlWebpackPlugin自带的ejs语法需要html-loader</p><h3 id="将图片字体打包"><a href="#将图片字体打包" class="headerlink" title="将图片字体打包"></a>将图片字体打包</h3><p>url-loader</p><h3 id="整体"><a href="#整体" class="headerlink" title="整体"></a>整体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">var webpack = require(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line">var MiniCssExtractPlugin = require(<span class="string">&quot;mini-css-extract-plugin&quot;</span>);</span><br><span class="line">var HtmlWebpackPlugin = require(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line">//获取html-webpack-plugin参数的方法</span><br><span class="line">var getHtmlConfig = <span class="keyword">function</span>(name)&#123;</span><br><span class="line"><span class="built_in">return</span>&#123;</span><br><span class="line">template: <span class="string">&#x27;./src/view/&#x27;</span>+name+<span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">filename: <span class="string">&#x27;view/&#x27;</span>+name+<span class="string">&#x27;.html&#x27;</span>,</span><br><span class="line">inject: <span class="literal">true</span>,</span><br><span class="line"><span class="built_in">hash</span>: <span class="literal">true</span>,</span><br><span class="line">chunks: [<span class="string">&#x27;common&#x27;</span>,name]</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">//webpack config</span><br><span class="line">var config = &#123;</span><br><span class="line">mode:<span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">entry: &#123;</span><br><span class="line"><span class="string">&#x27;common&#x27;</span>: [<span class="string">&#x27;./src/page/common/index.js&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;index&#x27;</span>: [<span class="string">&#x27;./src/page/index/index.js&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;login&#x27;</span>: [<span class="string">&#x27;./src/page/login/index.js&#x27;</span>],</span><br><span class="line">&#125;,</span><br><span class="line">output: &#123;</span><br><span class="line">publicPath : <span class="string">&#x27;dev&#x27;</span> === WEBPACK_ENV ? <span class="string">&#x27;/dist/&#x27;</span> : <span class="string">&#x27;//s.happymmall.com/mmall-fe/dist/&#x27;</span>,</span><br><span class="line">filename: <span class="string">&#x27;js/[name].js&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line">optimization: &#123;</span><br><span class="line">runtimeChunk: <span class="literal">false</span>,</span><br><span class="line">splitChunks: &#123;</span><br><span class="line">cacheGroups: &#123;</span><br><span class="line">common: &#123;</span><br><span class="line">name: <span class="string">&#x27;common&#x27;</span>,</span><br><span class="line">chunks: <span class="string">&quot;all&quot;</span>,</span><br><span class="line">minChunks: 2</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">externals: &#123;</span><br><span class="line"><span class="string">&#x27;jquery&#x27;</span>: <span class="string">&#x27;window.jQuery&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    new MiniCssExtractPlugin(&#123;</span><br><span class="line">      // Options similar to the same options <span class="keyword">in</span> webpackOptions.output</span><br><span class="line">      // both options are optional</span><br><span class="line">      filename: <span class="string">&quot;css/[name].css&quot;</span>,</span><br><span class="line">      chunkFilename: <span class="string">&quot;[name].css&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    new HtmlWebpackPlugin(getHtmlConfig(<span class="string">&#x27;index&#x27;</span>)),</span><br><span class="line">    new HtmlWebpackPlugin(getHtmlConfig(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">  ],</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;//css单独打包</span><br><span class="line">        <span class="built_in">test</span>: /\.css$/,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,  // replace ExtractTextPlugin.extract(&#123;..&#125;)</span><br><span class="line">          // <span class="string">&quot;style-loader&quot;</span>?,</span><br><span class="line">          <span class="string">&quot;css-loader&quot;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;//模板文件的处理</span><br><span class="line">    <span class="built_in">test</span>:/\.string$/,</span><br><span class="line">    use: [&#123;</span><br><span class="line">    loader: <span class="string">&#x27;html-loader&#x27;</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">    removeAttributeQuotes: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">      &#123;//图片的处理</span><br><span class="line">      <span class="built_in">test</span>: /\.(png|jpg|gif)$/,</span><br><span class="line">      use: [&#123;</span><br><span class="line">      loader: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">      <span class="built_in">limit</span>: 2048,</span><br><span class="line">      name: <span class="string">&#x27;resource/[name].[ext]&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;//字体文件的配置</span><br><span class="line">      <span class="built_in">test</span>: /\.(eot|svg|ttf|woff|woff2|otf)$/, </span><br><span class="line">      use: [ &#123; </span><br><span class="line">      loader: <span class="string">&#x27;url-loader&#x27;</span>, </span><br><span class="line">      options: &#123; </span><br><span class="line">      <span class="built_in">limit</span>: 8192, </span><br><span class="line">      name: <span class="string">&#x27;resource/[name].[ext]&#x27;</span> </span><br><span class="line">      &#125; </span><br><span class="line">      &#125;] </span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">module.exports = config;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>for循环</title>
      <link href="/2022/06/16/for%E5%BE%AA%E7%8E%AF/"/>
      <url>/2022/06/16/for%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="for循环的定义"><a href="#for循环的定义" class="headerlink" title="for循环的定义"></a>for循环的定义</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(语句1;语句2;语句3)&#123;</span><br><span class="line">代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语句1:在循环（代码块）开始前执行 (可选)<br>语句2:定义运行循环（代码块）的条件,这一部分执行后只会返回true和false (可选)<br>语句3:在循环（代码块）已被执行之后执行 (可选)<br>理论上可以全为空但没有任何实际意义</p><h3 id="for循环方法1"><a href="#for循环方法1" class="headerlink" title="for循环方法1"></a>for循环方法1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">//do something</span><br></pre></td></tr></table></figure><h3 id="for循环方法2"><a href="#for循环方法2" class="headerlink" title="for循环方法2"></a>for循环方法2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i=0,len=arr.length;i&lt;len;i++)&#123;</span><br><span class="line">//do something</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环方法3"><a href="#for循环方法3" class="headerlink" title="for循环方法3"></a>for循环方法3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arrs.forEach(<span class="keyword">function</span>(i)&#123;</span><br><span class="line">//do something</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>经过测试几种方法的运行时间: 方法一&gt;方法二&gt;方法三<br>第一种方法经常用,第二种方法常用在伪数组,第三种方法额…只有用jquery中each用过,其他没见过</p><p>今天碰见一段代码是这样的:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i=0;i&lt;optArr.length;)&#123;</span><br><span class="line">sel2.appendChild(optArr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想了很久,终于明白:首先赋值i=0,执行第二个语句,返回true;将optarr数组中的第一个元素取出来,然后放入sel2中,第二轮中仍然取第一个元素,optarr数组中原来的第二个元素变成第一个元素,知道最后optArr.length=0;返回false,跳出循环.appendChild()方法是将一个元素从一个列表向另一个列表移动列表项,这是最方便的办法.</p><p>虽然for循环很简单,也是我们平常的练习的时候经常用到的,但是我们要真正用到极致,还需要更加深入的理解</p>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/13/hello-world/"/>
      <url>/2022/06/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
